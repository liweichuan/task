<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.1.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--读取memcache缓存xml文件-->
    <!--读取redis缓存xml文件-->
    <!--用来申明spring对@AspectJ的支持，true那么基于类的代理将起作用-->

    <import resource="spring-memcache.xml"/>
    <import resource="spring-redis.xml"/>
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <context:annotation-config/>
    <!--开启组件自动扫描,扫描路径由base-package属性指定，表示Spring将会扫描该目录以及子目录下所有被
    @Repository、@com.jnshu.Service 和 @com.jnshu.Controller 和 @Component四个注解修饰的类，对它们进行装配-->
    <context:component-scan base-package="com.jnshu.*"/>


    <!-- 加载数据库配置文件-->
    <context:property-placeholder location="classpath:db.properties"/>

    <!-- 数据库连接池 -->
    <bean id="datasource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- 最大并发连接数 -->
        <property name = "maxActive" value = "20" />
        <!-- 初始化连接数量 -->
        <property name = "initialSize" value = "1" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name = "maxWait" value="60000"/>
        <!-- 最小空闲连接数 -->
        <property name = "minIdle" value = "10" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name = "timeBetweenEvictionRunsMillis" value ="15" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name = "minEvictableIdleTimeMillis" value ="60000" />
    </bean>

    <!--让spring管理sqlSessionFactory spring和Mybatis整合-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="datasource"/>
        <!-- 加载mybatis的全局配置文件 -->
        <property name="configLocation" value="classpath:Mybatis-config.xml"/>
        <!--指定mapper映射文件的位置-->
        <property name="mapperLocations" value="classpath*:Mapper/*.xml"/>
    </bean>

    <!-- 自动扫描 将Mapper接口生成代理注入到Spring
   对于在basePackage设置的包（包括子包）下的接口类， 如果接口类的全类名在Mapper.xml文件中和定义过
   命名空间一致，将被转换成spring的BEAN，在调用的地方通过@Autowired方式将可以注入接口实例-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.jnshu.Dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!--   在这里导入spring-memcache.xml的配置文件-->
    <import resource="spring-memcache.xml"/>
</beans>