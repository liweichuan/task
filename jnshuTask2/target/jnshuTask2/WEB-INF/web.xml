<?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE web-app PUBLIC
                "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
                "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app
version="3.0"
xmlns="http://java.sun.com/xml/ns/javaee"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

<!--加载spring上下文环境的配置文件applicationContext.xml文件-->
<context-param>
  <param-name>contextConfigLocation</param-name>
  <param-value>classpath:Application.xml</param-value>
</context-param>

<!--  配置listener-->
<listener>
  <description>spring容器加载监听器</description>
  <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
</listener>

<!--  第二步，字符编码过滤器-->
<filter>
  <filter-name>characterEncodingFilter</filter-name>
  <filter-class >org.springframework.web.filter.CharacterEncodingFilter</filter-class>
  <init-param>
    <param-name>encoding</param-name>
    <param-value>UTF-8</param-value>
  </init-param>
  <init-param>
    <param-name>forceEncoding</param-name>
    <param-value>true</param-value>
  </init-param>
</filter>
<!--  路径映射-->
<filter-mapping>
  <filter-name>characterEncodingFilter</filter-name>
  <url-pattern>/*</url-pattern>
</filter-mapping>

<!-- 第三步：配置SpringMvc核心控制器DispatcherServlet-->
<servlet>
  <!--    servlet名称-->
  <servlet-name>DispatcherServlet</servlet-name>
  <!--    servlet全路径-->
  <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  <!--    配置DispatcherServlet初始化参数：配置springmvc配置文件的位置和名称
                实际上也可以不通过 contextConfigLocation 来配置 SpringMVC 的配置文件, 而使用默认的.
                默认的配置文件为: /WEB-INF/<servlet-name>-servlet.xml
                这样配置文件就不是放在src下了，而是放在WEB-INF下，此时名字叫做HelloWorld-servlet.xml
                                 -->
  <init-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:springmvc-servlet.xml</param-value>
  </init-param>
  <!--指定当WEB应用启动时，装载servlet的次序-->
  <load-on-startup>1</load-on-startup>
</servlet>
  <!--SpringMvc配置文件结束-->

  <!--第四步：拦截设置-->
<servlet-mapping>
  <servlet-name>DispatcherServlet</servlet-name>
  <!--由SpringMvc拦截所有请求-->
  <url-pattern>/</url-pattern>
</servlet-mapping>
<!--HiddenHttpMethodFilter过滤器可以将POST请求转化为put请求和delete请求!-->
  <filter>
    <filter-name>HiddenHttpMethodFilter</filter-name>
    <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>HiddenHttpMethodFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

<display-name>Archetype Created Web Application</display-name>
</web-app>
